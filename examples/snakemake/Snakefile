ml_methods = ['regLogistic', 'rf']
seeds = range(100, 101)

rule targets:
    input:
        expand("results/runs/{method}_{seed}_model.Rds",
                method = ml_methods,
                seed = seeds)
#        expand("results/{type}_results.csv",
#                type = ['performance', 'feature-importance'])

rule preprocess_data:
    input:
        R="code/preproc.R",
        csv="data/raw/otu_medium.csv"
    output:
        rds='data/processed/otu_medium.Rds'
    script:
        "code/preproc.R"

rule run_ml:
    input:
        R="code/ml.R",
        rds=rules.preprocess_data.output.rds
    output:
        model="results/runs/{method}_{seed}_model.Rds",
        perf="results/runs/{method}_{seed}_performance.csv",
        feat="results/runs/{method}_{seed}_feature-importance.csv"
    params:
        method="{method}",
        seed="{seed}"
    resources:
        ncores=8,
        pmem_gb=2
    script:
        "code/ml.R"

rule merge_results:
    input:
        R="code/merge_results.R",
        csv=expand("results/runs/{method}_{seed}_{{type}}.csv", method = ml_methods, seed = seeds)
    output:
        csv='results/{type}_results.csv'
    script:
        "code/merge_results.R"


# TODO; plots, report, etc.
