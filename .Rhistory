apply(mics,2,function(x) gsub('/.*|<=|>=|≤|≥','',x))
tibble(apply(mics,2,function(x) gsub('/.*|<=|>=|≤|≥','',x)))
as.tibble(apply(mics,2,function(x) gsub('/.*|<=|>=|≤|≥','',x)))
apply(as.tibble(apply(mics,2,function(x) gsub('/.*|<=|>=|≤|≥','',x))), 2, table)
apply(as.tibble(apply(mics,2,function(x) gsub('/.*|<=|>=|≤|≥','',x))) %>% gsub('>16','32'), 2, table)
apply(as.tibble(apply(mics,2,function(x) gsub('/.*|<=|>=|≤|≥','',x))) %>% gsub('>16','32',.), 2, table)
gsub('/.*|<=|>=|≤|≥','',x))) %>% gsub('>16','32',.)
apply(as.tibble(apply(mics,2,function(x) gsub('/.*|<=|>=|≤|≥','',x) %>% gsub('>16','32',.))), 2, table)
apply(as.tibble(apply(mics,2,function(x) gsub('/.*|<=|>=|≤|≥','',x) %>%
gsub('>16','32',.) %>%
gsub('>32','64',.) %>%
gsub('>64','128',.) %>%
gsub('>128','256',.)
)), 2, table)
# CLSI breakpoints
# S/I/R
# gentamicin & tobramicin: <= 4, 8, >=16
# amikacin: <=16, 32, >=64
# bactrim: <= 2/38, >= 4/76
# meropenem-vaborbactam: <=4/8, 8/8, >=16/8
# piperacillin-tazobactam: <=16/4, 32/4-64/4, >=128/4
# meropenem, imipenem: <=1, 2, >=4
# colistin or polymyxin b: <=2, >=4
# ceftazidime-avibactam: <=8/4, >=16,4
apply(as.tibble(apply(mics,2,function(x) gsub('/.*|<=|>=|≤|≥','',x) %>%
gsub('>16','32',.) %>%
gsub('>32','64',.) %>%
gsub('>64','128',.) %>%
gsub('>128','256',.) %>%
log2(.)
)), 2, table)
apply(as.tibble(apply(mics,2,function(x) gsub('/.*|<=|>=|≤|≥','',x) %>%
gsub('>16','32',.) %>%
gsub('>32','64',.) %>%
gsub('>64','128',.) %>%
gsub('>128','256',.) %>%
log2()
)), 2, table)
apply(as.tibble(apply(mics,2,function(x){
gsub('/.*|<=|>=|≤|≥','',x) %>%
gsub('>16','32',.) %>%
gsub('>32','64',.) %>%
gsub('>64','128',.) %>%
gsub('>128','256',.) %>%
log2()
})), 2, table)
apply(as.tibble(apply(mics,2,function(x){
gsub('/.*|<=|>=|≤|≥','',x) %>%
gsub('>16','32',.) %>%
gsub('>32','64',.) %>%
gsub('>64','128',.) %>%
gsub('>128','256',.) %>%
as.numeric() %>%
log2()
})), 2, table)
apply(as.tibble(apply(mics[,2:ncol(mics)],2,function(x){
gsub('/.*|<=|>=|≤|≥','',x) %>%
gsub('>16','32',.) %>%
gsub('>32','64',.) %>%
gsub('>64','128',.) %>%
gsub('>128','256',.) %>%
as.numeric() %>%
log2()
})), 2, table)
apply(as.tibble(apply(mics,2,function(x){
gsub('/.*|<=|>=|≤|≥','',x) %>%
gsub('>16','32',.) %>%
gsub('>32','64',.) %>%
gsub('>64','128',.) %>%
gsub('>128','256',.) %>%
as.numeric()
})), 2, table)
as.tibble(apply(mics,2,function(x){
gsub('/.*|<=|>=|≤|≥','',x) %>%
gsub('>16','32',.) %>%
gsub('>32','64',.) %>%
gsub('>64','128',.) %>%
gsub('>128','256',.) %>%
as.numeric()
}))
mics = as.tibble(apply(mics,2,function(x){
gsub('/.*|<=|>=|≤|≥','',x) %>%
gsub('>16','32',.) %>%
gsub('>32','64',.) %>%
gsub('>64','128',.) %>%
gsub('>128','256',.) %>%
as.numeric()
}))
names(mics)
apply(mics,table)
apply(mics,2,table)
(63+39+24+14+11)/(nrow(mics))
tree
tree$tip.label = gsub('PCMP_H',tree$tip.label)
tree$tip.label = gsub('PCMP_H','',tree$tip.label)
tree$tip.label %in% mics$isolate_no
gheatmap(ggtree(tree),mics)
head(mics)
?ggtree
rownames(mics) = mics$isolate_no
# change limits to numbers
mics = (apply(mics,2,function(x){
gsub('/.*|<=|>=|≤|≥','',x) %>%
gsub('>16','32',.) %>%
gsub('>32','64',.) %>%
gsub('>64','128',.) %>%
gsub('>128','256',.) %>%
as.numeric()
}))
rownames(mics) = mics$isolate_no
# change limits to numbers
mics = data.frame(apply(mics,2,function(x){
gsub('/.*|<=|>=|≤|≥','',x) %>%
gsub('>16','32',.) %>%
gsub('>32','64',.) %>%
gsub('>64','128',.) %>%
gsub('>128','256',.) %>%
as.numeric()
}))
rownames(mics) = mics$isolate_no
mics = mics[,2:ncol(mics)]
gheatmap(ggtree(tree),mics)
gheatmap(ggtree(tree),log2(mics))
gheatmap(ggtree(tree),log2(mics),low = 'white')
gheatmap(ggtree(tree),log2(mics),low = 'white',colnames_angle = 90)
gheatmap(ggtree(tree),log2(mics),low = 'white',colnames_angle = 90,colnames_position = 'top)
gheatmap(ggtree(tree),log2(mics),low = 'white',colnames_angle = 90,colnames_position = 'top')
gheatmap(ggtree(tree),log2(mics),low = 'grey',colnames_angle = 90,colnames_position = 'top')
gheatmap(ggtree(tree),log2(mics),low = 'grey',colnames_angle = 90,colnames_position = 'top',color = NA)
mics
colnames(mics)
# amikacin: <=16, 32, >=64
# bactrim: <= 2/38, >= 4/76 -- confused about how to interpret this (maybe combo? 40, 80?)
# meropenem, imipenem: <=1, 2, >=4
# meropenem-vaborbactam: <=4/8, 8/8, >=16/8
# piperacillin-tazobactam: <=16/4, 32/4-64/4, >=128/4 -- almost all resistant (6 not resistant)
# colistin or polymyxin b: <=2, >=4
# ceftazidime-avibactam: <=8/4, >=16/4 -- only 4 resistant
# ceftolozane-tazobactam: <=2/4, 4/4, >=8/4 -- only 1 not resistant
# imipenem-mk-7655, tigecycline, plazomicin, fosfomycin+: none
# fosfomycin on own: <=64, 128, >=256
mics %>% select(cefepime_mic, gent_mic, tobra_mic, bactrim_mic, MERO, MEV, P.T4, CZA, IMI, C.T, COL, AMI)
# amikacin: <=16, 32, >=64
# bactrim: <= 2/38, >= 4/76 -- confused about how to interpret this (maybe combo? 40, 80?)
# meropenem, imipenem: <=1, 2, >=4
# meropenem-vaborbactam: <=4/8, 8/8, >=16/8
# piperacillin-tazobactam: <=16/4, 32/4-64/4, >=128/4 -- almost all resistant (6 not resistant)
# colistin or polymyxin b: <=2, >=4
# ceftazidime-avibactam: <=8/4, >=16/4 -- only 4 resistant
# ceftolozane-tazobactam: <=2/4, 4/4, >=8/4 -- only 1 not resistant
# imipenem-mk-7655, tigecycline, plazomicin, fosfomycin+: none
# fosfomycin on own: <=64, 128, >=256
mics %>% select(cefepime_mic, gent_mic, tobra_mic, bactrim_mic, MERO, MEV, P.T4, CZA, IMI, C.T, COL, AMI) %>% mutate(
cefepime_mic = case_when(cefepime_mic <= 2 ~ 'S',
cefepime_mic == 8 ~ 'I',
cefepime_mic >= 16 ~ 'R')
)
# CLSI breakpoints
# S/I/R
# cefepime: <=2, 4-8, >=16 -- almost all resistant (maybe not worth looking into)
# gentamicin & tobramicin: <= 4, 8, >=16
# amikacin: <=16, 32, >=64
# bactrim: <= 2/38, >= 4/76 -- confused about how to interpret this (maybe combo? 40, 80?)
# meropenem, imipenem: <=1, 2, >=4
# meropenem-vaborbactam: <=4/8, 8/8, >=16/8
# piperacillin-tazobactam: <=16/4, 32/4-64/4, >=128/4 -- almost all resistant (6 not resistant)
# colistin or polymyxin b: <=2, >=4
# ceftazidime-avibactam: <=8/4, >=16/4 -- only 4 resistant
# ceftolozane-tazobactam: <=2/4, 4/4, >=8/4 -- only 1 not resistant
# imipenem-mk-7655, tigecycline, plazomicin, fosfomycin+: none
# fosfomycin on own: <=64, 128, >=256
mics %>% select(cefepime_mic, gent_mic, tobra_mic, bactrim_mic, MERO, MEV, P.T4, CZA, IMI, C.T, COL, AMI) %>% mutate(
cefepime_mic = case_when(cefepime_mic <= 2 ~ 'S',
cefepime_mic %in% c(4,8) ~ 'I',
cefepime_mic >= 16 ~ 'R'),
gent_mic = case_when(gent_mic <=4 ~ 'S',
gent_mic == 8 ~ 'I',
gent_mic >= 16 ~ 'R'),
tobra_mic = case_when(tobra_mic <=4 ~ 'S',
tobra_mic == 8 ~ 'I',
tobra_mic >= 16 ~ 'R'),
bactrim_mic = case_when(bactrim_mic <= 40 ~ 'S',
bactrim_mic >= 80 ~ 'R'),
MERO = case_when(MERO <= 1 ~ 'S',
MERO == 2 ~ 'I',
MERO >= 4 ~ 'R'),
MEV = case_when(MEV <= 4 ~ 'S',
MEV == 8 ~ 'I',
MEV >= 16 ~ 'R'),
PT.4 = case_when(PT.4 <= 16 ~ 'S',
PT.4 %in% c(32,64) ~ 'I',
PT.4 >= 128 ~ 'R'),
CZA = case_when(CZA <= 8 ~ 'S',
CZA >= 16 ~ 'R'),
IMI = case_when(IMI <= 1 ~ 'S',
IMI == 2 ~ 'I',
IMI >= 4 ~ 'R'),
C.T = case_when(C.T <= 2 ~ 'S',
C.T == 4 ~ 'I',
C.T >= 8 ~ 'R'),
COL = case_when(COL <= 2 ~ 'S',
COL >= 4 ~ 'R'),
AMI = case_when(AMI <= 16 ~ 'S',
AMI == 32 ~ 'I',
AMI >= 64 ~ 'R'),
)
# CLSI breakpoints
# S/I/R
# cefepime: <=2, 4-8, >=16 -- almost all resistant (maybe not worth looking into)
# gentamicin & tobramicin: <= 4, 8, >=16
# amikacin: <=16, 32, >=64
# bactrim: <= 2/38, >= 4/76 -- confused about how to interpret this (maybe combo? 40, 80?)
# meropenem, imipenem: <=1, 2, >=4
# meropenem-vaborbactam: <=4/8, 8/8, >=16/8
# piperacillin-tazobactam: <=16/4, 32/4-64/4, >=128/4 -- almost all resistant (6 not resistant)
# colistin or polymyxin b: <=2, >=4
# ceftazidime-avibactam: <=8/4, >=16/4 -- only 4 resistant
# ceftolozane-tazobactam: <=2/4, 4/4, >=8/4 -- only 1 not resistant
# imipenem-mk-7655, tigecycline, plazomicin, fosfomycin+: none
# fosfomycin on own: <=64, 128, >=256
mics %>% select(cefepime_mic, gent_mic, tobra_mic, bactrim_mic, MERO, MEV, P.T4, CZA, IMI, C.T, COL, AMI) %>% mutate(
cefepime_mic = case_when(cefepime_mic <= 2 ~ 'S',
cefepime_mic %in% c(4,8) ~ 'I',
cefepime_mic >= 16 ~ 'R'),
gent_mic = case_when(gent_mic <=4 ~ 'S',
gent_mic == 8 ~ 'I',
gent_mic >= 16 ~ 'R'),
tobra_mic = case_when(tobra_mic <=4 ~ 'S',
tobra_mic == 8 ~ 'I',
tobra_mic >= 16 ~ 'R'),
bactrim_mic = case_when(bactrim_mic <= 40 ~ 'S',
bactrim_mic >= 80 ~ 'R'),
MERO = case_when(MERO <= 1 ~ 'S',
MERO == 2 ~ 'I',
MERO >= 4 ~ 'R'),
MEV = case_when(MEV <= 4 ~ 'S',
MEV == 8 ~ 'I',
MEV >= 16 ~ 'R'),
PT.4 = case_when(PT.4 <= 16 ~ 'S',
PT.4 %in% c(32,64) ~ 'I',
PT.4 >= 128 ~ 'R'),
CZA = case_when(CZA <= 8 ~ 'S',
CZA >= 16 ~ 'R'),
IMI = case_when(IMI <= 1 ~ 'S',
IMI == 2 ~ 'I',
IMI >= 4 ~ 'R'),
C.T = case_when(C.T <= 2 ~ 'S',
C.T == 4 ~ 'I',
C.T >= 8 ~ 'R'),
COL = case_when(COL <= 2 ~ 'S',
COL >= 4 ~ 'R'),
AMI = case_when(AMI <= 16 ~ 'S',
AMI == 32 ~ 'I',
AMI >= 64 ~ 'R'),
)
# CLSI breakpoints
# S/I/R
# cefepime: <=2, 4-8, >=16 -- almost all resistant (maybe not worth looking into)
# gentamicin & tobramicin: <= 4, 8, >=16
# amikacin: <=16, 32, >=64
# bactrim: <= 2/38, >= 4/76 -- confused about how to interpret this (maybe combo? 40, 80?)
# meropenem, imipenem: <=1, 2, >=4
# meropenem-vaborbactam: <=4/8, 8/8, >=16/8
# piperacillin-tazobactam: <=16/4, 32/4-64/4, >=128/4 -- almost all resistant (6 not resistant)
# colistin or polymyxin b: <=2, >=4
# ceftazidime-avibactam: <=8/4, >=16/4 -- only 4 resistant
# ceftolozane-tazobactam: <=2/4, 4/4, >=8/4 -- only 1 not resistant
# imipenem-mk-7655, tigecycline, plazomicin, fosfomycin+: none
# fosfomycin on own: <=64, 128, >=256
mics %>% select(cefepime_mic, gent_mic, tobra_mic, bactrim_mic, MERO, MEV, P.T4, CZA, IMI, C.T, COL, AMI) %>% mutate(
cefepime_mic = case_when(cefepime_mic <= 2 ~ 'S',
cefepime_mic %in% c(4,8) ~ 'I',
cefepime_mic >= 16 ~ 'R'),
gent_mic = case_when(gent_mic <=4 ~ 'S',
gent_mic == 8 ~ 'I',
gent_mic >= 16 ~ 'R'),
tobra_mic = case_when(tobra_mic <=4 ~ 'S',
tobra_mic == 8 ~ 'I',
tobra_mic >= 16 ~ 'R'),
bactrim_mic = case_when(bactrim_mic <= 40 ~ 'S',
bactrim_mic >= 80 ~ 'R'),
MERO = case_when(MERO <= 1 ~ 'S',
MERO == 2 ~ 'I',
MERO >= 4 ~ 'R'),
MEV = case_when(MEV <= 4 ~ 'S',
MEV == 8 ~ 'I',
MEV >= 16 ~ 'R'),
P.T4 = case_when(PT.4 <= 16 ~ 'S',
PT.4 %in% c(32,64) ~ 'I',
PT.4 >= 128 ~ 'R'),
CZA = case_when(CZA <= 8 ~ 'S',
CZA >= 16 ~ 'R'),
IMI = case_when(IMI <= 1 ~ 'S',
IMI == 2 ~ 'I',
IMI >= 4 ~ 'R'),
C.T = case_when(C.T <= 2 ~ 'S',
C.T == 4 ~ 'I',
C.T >= 8 ~ 'R'),
COL = case_when(COL <= 2 ~ 'S',
COL >= 4 ~ 'R'),
AMI = case_when(AMI <= 16 ~ 'S',
AMI == 32 ~ 'I',
AMI >= 64 ~ 'R'),
)
# CLSI breakpoints
# S/I/R
# cefepime: <=2, 4-8, >=16 -- almost all resistant (maybe not worth looking into)
# gentamicin & tobramicin: <= 4, 8, >=16
# amikacin: <=16, 32, >=64
# bactrim: <= 2/38, >= 4/76 -- confused about how to interpret this (maybe combo? 40, 80?)
# meropenem, imipenem: <=1, 2, >=4
# meropenem-vaborbactam: <=4/8, 8/8, >=16/8
# piperacillin-tazobactam: <=16/4, 32/4-64/4, >=128/4 -- almost all resistant (6 not resistant)
# colistin or polymyxin b: <=2, >=4
# ceftazidime-avibactam: <=8/4, >=16/4 -- only 4 resistant
# ceftolozane-tazobactam: <=2/4, 4/4, >=8/4 -- only 1 not resistant
# imipenem-mk-7655, tigecycline, plazomicin, fosfomycin+: none
# fosfomycin on own: <=64, 128, >=256
mics %>% select(cefepime_mic, gent_mic, tobra_mic, bactrim_mic, MERO, MEV, P.T4, CZA, IMI, C.T, COL, AMI) %>% mutate(
cefepime_mic = case_when(cefepime_mic <= 2 ~ 'S',
cefepime_mic %in% c(4,8) ~ 'I',
cefepime_mic >= 16 ~ 'R'),
gent_mic = case_when(gent_mic <=4 ~ 'S',
gent_mic == 8 ~ 'I',
gent_mic >= 16 ~ 'R'),
tobra_mic = case_when(tobra_mic <=4 ~ 'S',
tobra_mic == 8 ~ 'I',
tobra_mic >= 16 ~ 'R'),
bactrim_mic = case_when(bactrim_mic <= 40 ~ 'S',
bactrim_mic >= 80 ~ 'R'),
MERO = case_when(MERO <= 1 ~ 'S',
MERO == 2 ~ 'I',
MERO >= 4 ~ 'R'),
MEV = case_when(MEV <= 4 ~ 'S',
MEV == 8 ~ 'I',
MEV >= 16 ~ 'R'),
P.T4 = case_when(P.T4 <= 16 ~ 'S',
P.T4 %in% c(32,64) ~ 'I',
P.T4 >= 128 ~ 'R'),
CZA = case_when(CZA <= 8 ~ 'S',
CZA >= 16 ~ 'R'),
IMI = case_when(IMI <= 1 ~ 'S',
IMI == 2 ~ 'I',
IMI >= 4 ~ 'R'),
C.T = case_when(C.T <= 2 ~ 'S',
C.T == 4 ~ 'I',
C.T >= 8 ~ 'R'),
COL = case_when(COL <= 2 ~ 'S',
COL >= 4 ~ 'R'),
AMI = case_when(AMI <= 16 ~ 'S',
AMI == 32 ~ 'I',
AMI >= 64 ~ 'R'),
)
# amikacin: <=16, 32, >=64
# bactrim: <= 2/38, >= 4/76 -- confused about how to interpret this (maybe combo? 40, 80?)
# meropenem, imipenem: <=1, 2, >=4
# meropenem-vaborbactam: <=4/8, 8/8, >=16/8
# piperacillin-tazobactam: <=16/4, 32/4-64/4, >=128/4 -- almost all resistant (6 not resistant)
# colistin or polymyxin b: <=2, >=4
# ceftazidime-avibactam: <=8/4, >=16/4 -- only 4 resistant
# ceftolozane-tazobactam: <=2/4, 4/4, >=8/4 -- only 1 not resistant
# imipenem-mk-7655, tigecycline, plazomicin, fosfomycin+: none
# fosfomycin on own: <=64, 128, >=256
mics_discrete = mics %>% select(cefepime_mic, gent_mic, tobra_mic, bactrim_mic, MERO, MEV, P.T4, CZA, IMI, C.T, COL, AMI) %>% mutate(
cefepime_mic = case_when(cefepime_mic <= 2 ~ 'S',
cefepime_mic %in% c(4,8) ~ 'I',
cefepime_mic >= 16 ~ 'R'),
gent_mic = case_when(gent_mic <=4 ~ 'S',
gent_mic == 8 ~ 'I',
gent_mic >= 16 ~ 'R'),
tobra_mic = case_when(tobra_mic <=4 ~ 'S',
tobra_mic == 8 ~ 'I',
tobra_mic >= 16 ~ 'R'),
bactrim_mic = case_when(bactrim_mic <= 40 ~ 'S',
bactrim_mic >= 80 ~ 'R'),
MERO = case_when(MERO <= 1 ~ 'S',
MERO == 2 ~ 'I',
MERO >= 4 ~ 'R'),
MEV = case_when(MEV <= 4 ~ 'S',
MEV == 8 ~ 'I',
MEV >= 16 ~ 'R'),
P.T4 = case_when(P.T4 <= 16 ~ 'S',
P.T4 %in% c(32,64) ~ 'I',
P.T4 >= 128 ~ 'R'),
CZA = case_when(CZA <= 8 ~ 'S',
CZA >= 16 ~ 'R'),
IMI = case_when(IMI <= 1 ~ 'S',
IMI == 2 ~ 'I',
IMI >= 4 ~ 'R'),
C.T = case_when(C.T <= 2 ~ 'S',
C.T == 4 ~ 'I',
C.T >= 8 ~ 'R'),
COL = case_when(COL <= 2 ~ 'S',
COL >= 4 ~ 'R'),
AMI = case_when(AMI <= 16 ~ 'S',
AMI == 32 ~ 'I',
AMI >= 64 ~ 'R'),
)
gheatmap(ggtree(tree),mics_discrete,low = 'grey',colnames_angle = 90,colnames_position = 'top',color = NA)
apply(mics_discrete,table)
apply(mics_discrete,2,table)
apply(mics,2,table)
apply(mics_discrete,2,table)
setwd('~/Desktop/gl_mount/Project_Penn_KPC/Analysis/Antibiotic_resistance/2020-07-06_mic-qc/')
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
# count number of pairs > 1 fold change different
mics$cefepime_mic
# count number of pairs > 1 fold change different
mics$COL
# count number of pairs > 1 fold change different
dist(mics$COL)
# count number of pairs > 1 fold change different
dist(mics$COL,diag = T)
# count number of pairs > 1 fold change different
dist(mics$COL,diag = T, upper = T)
# count number of pairs > 1 fold change different
dist(log2(mics$COL),diag = T, upper = T)
head(log2(mics$CO))
head(log2(mics$COL))
# count number of pairs > 1 fold change different
c(dist(log2(mics$COL)))
# count number of pairs > 1 fold change different
table(c(dist(log2(mics$COL))))
# count number of pairs > 1 fold change different
apply(mics,2,function(x) table(c(dist(log2(x))))
)
# for more than anecdotal analysis, remove: cefepime, tobramycin, P/T4,
# count number of pairs > 1 fold change different
apply(mics,2,function(x){
dists = c(dist(log2(x)))
table(dists)/length(dists)
})
# for more than anecdotal analysis, remove: cefepime, tobramycin, P/T4,
# count number of pairs > 1 fold change different
apply(mics,2,function(x){
dists = c(dist(log2(x)))
table(dists)/length(dists[!is.na(dists)])
})
# for more than anecdotal analysis, remove: cefepime, tobramycin, P/T4,
# count number of pairs > 1 fold change different
apply(mics,2,function(x){
dists = c(dist(log2(x)))
sum(dists > 1)/length(dists[!is.na(dists)])
})
# for more than anecdotal analysis, remove: cefepime, tobramycin, P/T4,
# count number of pairs > 1 fold change different
apply(mics,2,function(x){
dists = c(dist(log2(x)))
sum(dists > 1,na.rm=T)/length(dists[!is.na(dists)])
})
# > 2
apply(mics,2,function(x){
dists = c(dist(log2(x)))
sum(dists > 2,na.rm=T)/length(dists[!is.na(dists)])
})
# for more than anecdotal analysis, remove: cefepime, tobramycin, P/T4,
# count number of pairs > 1 fold change different
apply(mics,2,function(x){
dists = c(dist(log2(x)))
sum(dists > 1,na.rm=T)/length(dists[!is.na(dists)])
})
# > 2
apply(mics,2,function(x){
dists = c(dist(log2(x)))
sum(dists > 2,na.rm=T)/length(dists[!is.na(dists)])
})
# for more than anecdotal analysis, remove: cefepime, tobramycin, P/T4,
# FOLD-CHANGE
apply(mics,2,function(x){
dists = c(dist(log2(x)))
table(dists)/length(dists[!is.na(dists)])
})
# count number of pairs > 1 fold change different
apply(mics,2,function(x){
dists = c(dist(log2(x)))
sum(dists > 1,na.rm=T)/length(dists[!is.na(dists)])
})
# for more than anecdotal analysis, remove: cefepime, tobramycin, P/T4,
# count number of pairs > 1 fold change different
apply(mics,2,function(x){
dists = c(dist(log2(x)))
sum(dists > 1,na.rm=T)/length(dists[!is.na(dists)])
})
# fold-change counts
apply(mics,2,function(x){
dists = c(dist(log2(x)))
table(dists)/length(dists[!is.na(dists)])
})
# new mic abbreviations
new %>% select(ANTIBIOTICS, `...17`) %>% filter(!is.na(ANTIBIOTICS))
sewtd('~/Desktop/ml-crkp-infection-manuscript/')
setwd('~/Desktop/ml-crkp-infection-manuscript/')
source('~/Desktop/ml-crkp-infection-manuscript/scripts/plot_aucs.R', echo=TRUE)
setwd('~/Desktop/gl_mount/Project_Penn_KPC/Analysis/Patient_outcome/2019-10-08_ml-inf-lr/')
source('~/Desktop/gl_mount/Project_Penn_KPC/Analysis/Patient_outcome/2019-10-08_ml-inf-lr/scripts/plot_auprc.R', echo=TRUE)
source('~/Desktop/gl_mount/Project_Penn_KPC/Analysis/Patient_outcome/2019-10-08_ml-inf-lr/scripts/plot_aucs.R', echo=TRUE)
options(OutDec=".")
source('~/Desktop/gl_mount/Project_Penn_KPC/Analysis/Patient_outcome/2019-10-08_ml-inf-lr/scripts/plot_auprc.R', echo=TRUE)
source('~/Desktop/gl_mount/Project_Penn_KPC/Analysis/Patient_outcome/2019-10-08_ml-inf-lr/scripts/plot_aucs.R', echo=TRUE)
setwd('~/Desktop/gl_mount/Project_Penn_KPC/Analysis/Antibiotic_resistance/2020-07-06_mic-qc/')
mics %>% filter(!names(mics) %in% c('cefepime_mic','tobra_mic'))
mics %>% select_if(!names(mics) %in% c('cefepime_mic','tobra_mic'))
mics = mics %>% select_if(!names(mics) %in% c('cefepime_mic','tobra_mic'))
names(mics)
source('~/Desktop/mikRopML/tests/testthat/test-get_corr_feats.R', echo=TRUE)
library(testthat)
source('~/Desktop/mikRopML/tests/testthat/test-get_corr_feats.R', echo=TRUE)
source('~/Desktop/mikRopML/R/get_corr_feats.R', echo=TRUE)
source('~/Desktop/mikRopML/tests/testthat/test-get_corr_feats.R', echo=TRUE)
devtools::check()
setwd('~/Desktop/mikRopML/')
devtools::check()
