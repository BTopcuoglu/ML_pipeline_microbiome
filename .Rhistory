var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
) %>% dplyr::as_tibble()
expect_equal(preprocess_data(test_df, 'outcome'),
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
))
expect_equal(preprocess_data(test_df, 'outcome'),
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
))
preprocess_data(test_df, 'outcome')
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
)
expect_equal(preprocess_data(test_df, 'outcome'),
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
) %>% as_tibble())
expect_equal(preprocess_data(test_df, 'outcome'),
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
) %>% dplyr::as_tibble())
df1 = data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
) %>% dplyr::as_tibble()
expect_equal(preprocess_data(test_df, 'outcome'),
df1)
preprocess_data(test_df, 'outcome')
class(preprocess_data(test_df, 'outcome'))
expect_equal(data.frame(preprocess_data(test_df, 'outcome')),
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
))
data.frame(preprocess_data(test_df, 'outcome'))
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
)
devtools::load_all()
expect_equal(preprocess_data(test_df, 'outcome'),
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
))
preprocess_data(test_df, 'outcome')
get_caret_dummyvars_df(test_df,TRUE)
get_caret_dummyvars_df(test_df,FALSE)
test_df
test_df[,2:4]
get_caret_dummyvars_df(test_df[,2:4],TRUE)
get_caret_dummyvars_df(test_df[,2:4],FALSE)
devtools::load_all()
get_caret_dummyvars_df(test_df[,2:4],FALSE)
get_caret_dummyvars_df(test_df[,2:4],TRUE)
expect_equal(preprocess_data(test_df, 'outcome'),
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
))
preprocess_data(test_df, 'outcome')
expect_equal(preprocess_data(test_df, 'outcome'),
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
) %>% dplyr::as_tibble())
expect_equal(preprocess_data(test_df, 'outcome',method = c('range')),
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(0,0.5,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
) %>% dplyr::as_tibble())
expect_equal(preprocess_data(test_df, 'outcome',rm_nzv=FALSE),
data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0),
var5 = c(0,0,0),
var6 = c(0,0,0)
) %>% dplyr::as_tibble())
expect_error(preprocess_data(test_df, 'outcome',method = c('asdf')))
process_novar_feats(test_df)
expect_equal(process_novar_feats(test_df),
list(novar_feats = tibble(var5=c(0,0,0),
var6=c(0,0,0))))
dplyr::tibble(var5=c(0,0,0),
var6=c(0,0,0))
test_that('preprocess_data works',{
expect_equal(preprocess_data(test_df, 'outcome'),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
))
expect_equal(preprocess_data(test_df, 'outcome',method = c('range')),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var1 = c(0,0.5,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
))
expect_equal(preprocess_data(test_df, 'outcome',rm_nzv=FALSE),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0),
var5 = c(0,0,0),
var6 = c(0,0,0)
))
expect_error(preprocess_data(test_df, 'outcome',method = c('asdf')))
})
process_novar_feats(test_df)
expect_equal(process_novar_feats(test_df[,2:ncol(test_df)]),
list(novar_feats = dplyr::tibble(var5=c(0,0,0),
var6=c(0,0,0)),
var_feats = dplyr::tibble(var1 = 1:3,
var2 = c('a','b','c'),
var3 = c('no','yes','no'),
var4 = c(0,1,0))))
expect_equal(process_novar_feats(test_df[,2:5]),
list(novar_feats = dplyr::tibble(var5=c(0,0,0),
var6=c(0,0,0)),
var_feats = dplyr::tibble(var1 = 1:3,
var2 = c('a','b','c'),
var3 = c('no','yes','no'),
var4 = c(0,1,0))))
expect_equal(process_novar_feats(test_df[,2:5]),
list(novar_feats = NULL,
var_feats = dplyr::tibble(var1 = 1:3,
var2 = c('a','b','c'),
var3 = c('no','yes','no'),
var4 = c(0,1,0))))
process_bin_feats(test_df)
expect_equal(process_bin_feats(test_df[,2:5]),
)
process_bin_feats(test_df[,2:5])
expect_equal(process_bin_feats(test_df[,2:5]),
list(bin_feats = tibble(var3yes=c(0,1,0),
var4=c(0,1,0)),
nonbin_feats = tibble(var1=c(1,2,3),
var2=c('a','b','c'))))
expect_equal(process_bin_feats(test_df[,2:5]),
list(bin_feats = dplyr::tibble(var3yes=c(0,1,0),
var4=c(0,1,0)),
nonbin_feats = dplyr::tibble(var1=c(1,2,3),
var2=c('a','b','c'))))
process_bin_feats(test_df[,4:5])
devtools::load_all()
process_bin_feats(test_df[,4:5])
expect_error(process_novar_feats(test_df[,5:6]))
process_novar_feats(test_df[,5:6])
expect_error(process_novar_feats(test_df[,6:7]))
test_that('process_bin_feats works',{
expect_equal(process_bin_feats(test_df[,2:5]),
list(bin_feats = dplyr::tibble(var3yes=c(0,1,0),
var4=c(0,1,0)),
nonbin_feats = dplyr::tibble(var1=c(1,2,3),
var2=c('a','b','c'))))
expect_equal(process_bin_feats(test_df[,4:5]),
list(bin_feats = dplyr::tibble(var3yes=c(0,1,0),
var4=c(0,1,0)),
nonbin_feats = NULL))
})
preprocess_data(test_df[,c('outcome','var1')], 'outcome')
expect_equal(preprocess_data(test_df[,c('outcome','var1')], 'outcome'),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
))
expect_equal(preprocess_data(test_df[,c('outcome','var2')], 'outcome'),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
))
expect_equal(preprocess_data(test_df[,c('outcome','var3')], 'outcome'),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var3yes = c(0,1,0),
))
test_df[,c('outcome','var3')]
process_novar_feats(test_df[,c('var3')])
test_df[,c('var3')]
process_novar_feats(as_tibble(test_df[,c('var3')]))
process_novar_feats(dplyr::as_tibble(test_df[,c('var3')]))
process_bin_feats(dplyr::as_tibble(test_df[,c('var3')]))
process_nonbin_feats(dplyr::as_tibble(test_df[,c('var3')]))
process_nonbin_feats(NULL,method)
process_novar_feats(NULL)
class(data.frame(a=c(1,2,3)))
expect_true(is.null(check_features(test_df)))
devtools::load_all()
test_that('check_features works', {
expect_true(is.null(check_features(test_df)))
expect_error()
})
expect_error(check_features(NULL))
test_that('check_features works', {
expect_true(is.null(check_features(test_df)))
expect_error(check_features(NULL))
})
process_nonbin_feats(NULL,method)
devtools::load_all()
process_nonbin_feats(NULL,method)
expect_error(process_novar_feats(NULL))
devtools::load_all()
expect_equal(preprocess_data(test_df[,c('outcome','var3')], 'outcome'),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var3yes = c(0,1,0),
))
preprocess_data(test_df[,c('outcome','var3')], 'outcome')
class(test_df[,c('outcome','var3')])
class(tibble(a=1))
class(dplyr::tibble(a=1))
expect_true(is.null(check_features(as_tibble(test_df))))
expect_true(is.null(check_features(dplyr::as_tibble(test_df))))
devtools::load_all()
test_that('check_features works', {
expect_true(is.null(check_features(test_df)))
expect_true(is.null(check_features(dplyr::as_tibble(test_df))))
expect_error(check_features(NULL))
})
expect_equal(preprocess_data(test_df[,c('outcome','var3')], 'outcome'),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var3yes = c(0,1,0),
))
expect_equal(preprocess_data(test_df, 'outcome',method = c('range')),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var1 = c(0,0.5,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0)
))
expect_equal(preprocess_data(test_df, 'outcome',rm_nzv=FALSE),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1),
var3yes = c(0,1,0),
var4 = c(0,1,0),
var5 = c(0,0,0),
var6 = c(0,0,0)
))
expect_error(preprocess_data(test_df, 'outcome',method = c('asdf')))
expect_equal(preprocess_data(test_df[,c('outcome','var4')], 'outcome'),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var3yes = c(0,1,0),
))
preprocess_data(test_df[,c('outcome','var4')], 'outcome')
expect_equal(preprocess_data(test_df[,c('outcome','var4')], 'outcome'),
dplyr::tibble(
outcome = c("normal", "normal", "cancer"),
var4 = c(0,1,0),
))
test_df[,c('outcome','var5')]
expect_error(test_df[,c('outcome','var5')])
expect_error(preprocess_data(test_df[,c('outcome','var5')], 'outcome'))
process_nonbin_feats(test_df[,2:5])
process_nonbin_feats(test_df[,2:5],c('center','scale'))
process_nonbin_feats(test_df[,2:3],c('center','scale'))
test_df[,2:3]
process_nonbin_feats(test_df[,2:3],c('center','scale'))
expect_equal(process_nonbin_feats(test_df[,2:3],c('center','scale')),
tibble(outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1)))
expect_equal(process_nonbin_feats(test_df[,2:3],c('center','scale')),
dplyr::tibble(outcome = c("normal", "normal", "cancer"),
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1)))
process_nonbin_feats(test_df[,2:3],c('center','scale'))
expect_equal(process_nonbin_feats(test_df[,2:3],c('center','scale')),
dplyr::tibble(
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1)))
expect_equal(process_nonbin_feats(test_df[,5],c('center','scale')),
dplyr::tibble(
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1)))
expect_equal(process_nonbin_feats(data.frame(test_df[,5]),c('center','scale')),
dplyr::tibble(
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1)))
process_nonbin_feats(data.frame(test_df[,5]),c('center','scale'))
test_df[,5]
data.frame(test_df[,6])
test_df[,6]
process_nonbin_feats(data.frame(test_df[,7]),c('center','scale'))
process_novar_feats(test_df[,2:ncol(test_df)])
process_novar_feats(test_df[,2:5])
devtools::load_all()
process_nonbin_feats(data.frame(test_df[,7]),c('center','scale'))
devtools::load_all()
expect_equal(process_nonbin_feats(test_df[,2:3],c('center','scale')),
dplyr::tibble(
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1)))
devtools::load_all()
process_nonbin_feats(test_df[,2:3],c('center','scale'))
devtools::load_all()
process_nonbin_feats(test_df[,2:3],c('center','scale'))
process_nonbin_feats(data.frame(test_df[,7]),c('center','scale'))
data.frame(test_df[,7])
devtools::load_all()
process_nonbin_feats(data.frame(test_df[,7]),c('center','scale'))
devtools::load_all()
process_nonbin_feats(data.frame(test_df[,7]),c('center','scale'))
devtools::load_all()
process_nonbin_feats(data.frame(test_df[,7]),c('center','scale'))
devtools::load_all()
process_nonbin_feats(data.frame(test_df[,7]),c('center','scale'))
devtools::load_all()
process_nonbin_feats(data.frame(test_df[,7]),c('center','scale'))
process_nonbin_feats(data.frame(test_df[,6:7]),c('center','scale'))
process_nonbin_feats(data.frame(test_df[,5:7]),c('center','scale'))
devtools::load_all()
expect_error(process_nonbin_feats(data.frame(test_df[,7]),c('center','scale')))
expect_error(process_nonbin_feats(data.frame(test_df[,6:7]),c('center','scale')))
expect_error(process_nonbin_feats(NULL))
test_that('process_nonbin_feats works',{
expect_equal(process_nonbin_feats(test_df[,2:3],c('center','scale')),
dplyr::tibble(
var1 = c(-1,0,1),
var2a = c(1,0,0),
var2b = c(0,1,0),
var2c = c(0,0,1)))
expect_error(process_nonbin_feats(data.frame(test_df[,7]),c('center','scale')))
expect_error(process_nonbin_feats(data.frame(test_df[,6:7]),c('center','scale')))
expect_error(process_nonbin_feats(NULL))
})
get_caret_processed_df(test_df,c('center','scale'))
get_caret_processed_df(test_df[,2:3],c('center','scale'))
expect_equal(get_caret_processed_df(test_df[,2:3],c('center','scale')),
tibble(var1=c(-1,0,1),
var2=c('a','b','c')))
expect_equal(get_caret_processed_df(test_df[,2:3],c('center','scale')),
dplyr::tibble(var1=c(-1,0,1),
var2=c('a','b','c')))
expect_equal(get_caret_processed_df(test_df[,2:3],c('center','scale')),
dplyr::tibble(var1=c(-1,0,1),
var2=c('a','b','c')))
get_caret_processed_df(test_df[,2:3],c('center','scale'))
class(get_caret_processed_df(test_df[,2:3],c('center','scale')))
expect_equal(get_caret_processed_df(test_df[,2:3],c('center','scale')),
data.frame(var1=c(-1,0,1),
var2=c('a','b','c')))
expect_equal(get_caret_processed_df(test_df[,5],c('center','scale'))
})
get_caret_processed_df(test_df[,5],c('center','scale'))
get_caret_processed_df(data.frame(test_df[,5]),c('center','scale'))
expect_error(get_caret_processed_df(NULL))
test_that('get_caret_processed_df works',{
expect_equal(get_caret_processed_df(test_df[,2:3],c('center','scale')),
data.frame(var1=c(-1,0,1),
var2=c('a','b','c')))
expect_error(get_caret_processed_df(NULL))
})
get_caret_dummyvars_df(test_df[,2:3],c('center','scale'))
test_df[,2:3]
get_caret_dummyvars_df(test_df[,2:3],TRUE)
expect_equal(get_caret_dummyvars_df(test_df[,2:3],FALSE),
data.frame(var1=c(-1,0,1),
var2a=c(1,0,0),
var2b=c(0,1,0),
var2c=c(0,0,1)))
get_caret_dummyvars_df(test_df[,2:3],FALSE)
get_caret_dummyvars_df(test_df[,2:3],FALSE),
data.frame(var1=c(1,2,3),
var2a=c(1,0,0),
var2b=c(0,1,0),
var2c=c(0,0,1))
expect_equal(get_caret_dummyvars_df(test_df[,2:3],FALSE),
data.frame(var1=c(1,2,3),
var2a=c(1,0,0),
var2b=c(0,1,0),
var2c=c(0,0,1)))
get_caret_dummyvars_df(test_df[,2:3],FALSE)
expect_equal(get_caret_dummyvars_df(test_df[,2:3],FALSE),
dplyr::tibble(var1=c(1,2,3),
var2a=c(1,0,0),
var2b=c(0,1,0),
var2c=c(0,0,1)))
expect_error(get_caret_dummyvars_df(NULL))
expect_equal(get_caret_dummyvars_df(test_df[,2:3],TRUE),
dplyr::tibble(var1=c(1,2,3),
var2b=c(0,1,0),
var2c=c(0,0,1)))
source('~/Desktop/mikRopML/tests/testthat/test-preprocess_data.R', echo=TRUE)
devtools::check()
df <- data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = 1:3,
var2 = c('a','b','c'),
var3 = c('no','yes','no'),
var4 = c(0,1,0),
)
get_caret_dummyvars_df(df, TRUE)
df <- data.frame(
outcome = c("normal", "normal", "cancer"),
var1 = 1:3,
var2 = c('a','b','c'),
var3 = c('no','yes','no'),
var4 = c(0,1,0)
)
get_caret_dummyvars_df(df, TRUE)
devtools::check()
